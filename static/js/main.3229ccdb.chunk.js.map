{"version":3,"sources":["components/Header/Header.js","components/Image/Image.js","components/PhotoGrid/PhotoGrid.js","components/Footer/Footer.js","components/Popup/Popup.js","hooks/useFormValidation.js","components/Preloader/Preloader.js","utils/mainApi.js","utils/config.js","utils/helpers.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Image","React","memo","id","url","onImageClick","src","alt","onClick","onKeyDown","e","key","role","PhotoGrid","cards","map","card","Footer","Popup","isOpenPopup","onClose","isLoadingComment","onSubmitComment","currentOriginSizeImage","comments","useState","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newErrors","newIsValid","handleChange","target","name","value","validationMessage","closest","checkValidity","useFormValidation","useEffect","tabIndex","aria-hidden","stopPropagation","type","comment","date","text","action","noValidate","method","onSubmit","preventDefault","placeholder","onChange","required","minLength","maxLength","pattern","disabled","Preloader","mainApi","baseUrl","this","_baseurl","fetch","headers","then","res","ok","json","Promise","reject","body","JSON","stringify","resolve","dateParseFromTimestampToString","timestamp","Date","dayAndMonth","toLocaleString","day","month","year","getFullYear","App","setCards","isLoading","setIsLoading","setIsLoadingComment","setIsOpenPopup","setCurrentOriginSizeImage","setComments","handlePopupOpen","document","addEventListener","handleEscClose","style","overflow","closePopup","removeEventListener","getInitialImages","data","catch","err","console","log","finally","imageId","getOriginalSizeImage","newComments","setNewComment","answerFromServer","Math","random","getTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3229ccdb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <footer className=\"header\">\r\n      <h1 className=\"header__title\">Test APP</h1>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Image.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Image = React.memo(({ id, url, onImageClick }) => {\r\n\r\n  function handleImageClick() {\r\n    onImageClick(id);\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    if (e.key === 'Enter') {\r\n      onImageClick(id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <img\r\n      key={id}\r\n      src={url}\r\n      alt=\"Картинка\"\r\n      className=\"photo-grid-img\"\r\n      onClick={handleImageClick}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"presentation\"\r\n    />\r\n  );\r\n});\r\n\r\nImage.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  onImageClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport './PhotoGrid.css';\r\nimport PropTypes from \"prop-types\";\r\nimport Image from '../../components/Image/Image';\r\n\r\nfunction PhotoGrid({ cards, onImageClick }) {\r\n\r\n  return (\r\n    <section className=\"photo-grid\">\r\n      {cards.map((card) => (\r\n        <Image\r\n          key={card.id}\r\n          id={card.id}\r\n          url={card.url}\r\n          onImageClick={onImageClick}\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nPhotoGrid.propTypes = {\r\n  cards: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhotoGrid;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">© 2018-2019-2021</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './Popup.css';\r\nimport PropTypes from 'prop-types';\r\nimport {useFormValidation} from \"../../hooks/useFormValidation\";\r\n\r\nconst Popup = React.memo((\r\n  {\r\n    isOpenPopup,\r\n    onClose,\r\n    isLoadingComment,\r\n    onSubmitComment,\r\n    currentOriginSizeImage,\r\n    comments\r\n  }) => {\r\n\r\n  const { values, errors, isValid, handleChange, resetForm } = useFormValidation();\r\n\r\n  React.useEffect(() => {\r\n    resetForm();\r\n  }, [comments, resetForm]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (values.name === '' || values.comment === '') {\r\n      return;\r\n    }\r\n    onSubmitComment(values, currentOriginSizeImage.id);\r\n  }\r\n\r\n  return (\r\n    <div className={`popup ${isOpenPopup && \"popup_opened\"}`} onClick={onClose} role=\"button\" tabIndex=\"-1\"\r\n         aria-hidden=\"true\">\r\n      <div className=\"popup__container\" onClick={(e) => e.stopPropagation()} role=\"complementary\" tabIndex=\"-1\"\r\n           aria-hidden=\"true\">\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          onClick={onClose}\r\n        />\r\n        <img className=\"popup__img\" src={currentOriginSizeImage.url} alt=\"Картинка\"/>\r\n        <div className=\"popup__comments-container\">\r\n          {comments.map((comment) => (\r\n            <div key={comment.id} className=\"popup__comment-container\">\r\n              <p className=\"popup__comment popup__comment_type_date\">{comment.date}</p>\r\n              <p className=\"popup__comment\">{comment.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form className=\"popup__form\" action=\"#\" noValidate method=\"get\" onSubmit={handleSubmit}>\r\n          <span\r\n            className={`popup__form-error ${!errors.name && 'popup__form-error_hide'}`}\r\n          >{errors.name || ''}</span>\r\n          <input\r\n            name=\"name\"\r\n            className=\"popup__form-input\"\r\n            type=\"text\"\r\n            placeholder=\"Ваше имя\"\r\n            value={values.name || ''}\r\n            onChange={handleChange}\r\n            required\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            pattern=\"^[а-яёА-ЯЁa-zA-Z0-9-\\s\\-]+$\"\r\n          />\r\n          <span\r\n            className={`popup__form-error ${!errors.comment && 'popup__form-error_hide'}`}\r\n          >{errors.comment || ''}</span>\r\n          <input\r\n            name=\"comment\"\r\n            className=\"popup__form-input\"\r\n            type=\"text\"\r\n            placeholder=\"Ваш комментарий\"\r\n            value={values.comment || ''}\r\n            onChange={handleChange}\r\n            required\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            pattern=\"^[а-яёА-ЯЁa-zA-Z0-9-\\s\\-]+$\"\r\n          />\r\n          <button\r\n            className=\"popup__form-button\"\r\n            type=\"submit\"\r\n            disabled={isLoadingComment || !isValid}\r\n          >{`${isLoadingComment ? 'Добавление комментария' : 'Оставить комментарий'}`}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nPopup.propTypes = {\r\n  isOpenPopup: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  isLoadingComment: PropTypes.bool.isRequired,\r\n  onSubmitComment: PropTypes.func.isRequired,\r\n  currentOriginSizeImage: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Popup;\r\n\r\n\r\n","import React, {useCallback} from 'react';\r\n\r\nexport const useFormValidation = () => {\r\n  const [values, setValues] = React.useState({});\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n    setErrors({ ...errors, [e.target.name]: e.target.validationMessage });\r\n    setIsValid(e.target.closest(\"form\").checkValidity());\r\n  };\r\n\r\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\r\n    setValues(newValues);\r\n    setErrors(newErrors);\r\n    setIsValid(newIsValid);\r\n  }, [setValues, setErrors, setIsValid]);\r\n\r\n  return { values, errors, isValid, handleChange, resetForm };\r\n};\r\n","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nfunction Preloader() {\r\n\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"preloader__img\"/>\r\n      <p className=\"preloader__text\">Идет поиск фотографий...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","import {BASE_URL} from \"./config\";\r\n\r\nclass MainApi {\r\n  constructor({ baseUrl }) {\r\n    this._baseurl = baseUrl;\r\n  }\r\n\r\n  getInitialImages() {\r\n    return fetch(`${this._baseurl}`, {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(res.json());\r\n      });\r\n  }\r\n\r\n  getOriginalSizeImage(id) {\r\n    return fetch(`${this._baseurl}/${id}`, {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(res.json());\r\n      });\r\n  }\r\n\r\n  setNewComment({id, name, comment}) {\r\n    return fetch(`${this._baseurl}/${id}/comments`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name, comment })\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return Promise.resolve('ok');\r\n        }\r\n        return Promise.reject(res.json());\r\n      });\r\n  }\r\n}\r\n\r\nconst mainApi = new MainApi({ baseUrl: BASE_URL });\r\n\r\nexport default mainApi\r\n","const BASE_URL = 'https://boiling-refuge-66454.herokuapp.com/images';\r\n\r\nexport {\r\n  BASE_URL,\r\n}\r\n","const dateParseFromTimestampToString = (timestamp) => {\r\n  const date = new Date(timestamp);\r\n  const dayAndMonth = date.toLocaleString('default', { day: 'numeric', month: 'numeric' });\r\n  const year = date.getFullYear();\r\n  return `${dayAndMonth}.${year}`;\r\n};\r\n\r\nexport {\r\n  dateParseFromTimestampToString\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from '../../components/Header/Header';\r\nimport PhotoGrid from '../../components/PhotoGrid/PhotoGrid';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Popup from '../../components/Popup/Popup';\r\nimport Preloader from '../../components/Preloader/Preloader';\r\nimport mainApi from \"../../utils/mainApi\";\r\nimport {dateParseFromTimestampToString} from \"../../utils/helpers\";\r\n\r\nfunction App() {\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [isLoadingComment, setIsLoadingComment] = React.useState(false);\r\n  const [isOpenPopup, setIsOpenPopup] = React.useState(false);\r\n  const [currentOriginSizeImage, setCurrentOriginSizeImage] = React.useState({});\r\n  const [comments, setComments] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n    mainApi.getInitialImages()\r\n      .then((data) => {\r\n        setCards(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() =>\r\n        setIsLoading(false)\r\n      )\r\n  }, []);\r\n\r\n  function handlePopupOpen() {\r\n    setIsOpenPopup(true);\r\n    document.addEventListener('keydown', handleEscClose);\r\n    document.body.style.overflow = \"hidden\";\r\n  }\r\n\r\n  function closePopup() {\r\n    setIsOpenPopup(false);\r\n    document.removeEventListener('keydown', handleEscClose);\r\n    document.body.style.overflow = \"auto\";\r\n  }\r\n\r\n  function handleEscClose(e) {\r\n    if (e.key === 'Escape') {\r\n      closePopup();\r\n    }\r\n  }\r\n\r\n  function handleGetOriginalSizeImage(imageId) {\r\n    if (imageId === currentOriginSizeImage.id) {\r\n      handlePopupOpen();\r\n    } else {\r\n      setCurrentOriginSizeImage({});\r\n      return mainApi.getOriginalSizeImage(imageId)\r\n        .then((res) => {\r\n          setCurrentOriginSizeImage({\r\n            id: res.id,\r\n            url: res.url\r\n          });\r\n          const newComments = res.comments.map((comment) => ({\r\n            text: comment.text,\r\n            date: dateParseFromTimestampToString(comment.date),\r\n            id: comment.id\r\n          }));\r\n          setComments(newComments);\r\n          handlePopupOpen();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleSubmitComment(values, imageId) {\r\n    setIsLoadingComment(true);\r\n    return mainApi.setNewComment({\r\n      id: imageId,\r\n      name: values.name,\r\n      comment: values.comment\r\n    })\r\n      .then(() => {\r\n        const answerFromServer = {\r\n          id: Math.random(),\r\n          text: values.comment,\r\n          date: dateParseFromTimestampToString(new Date().getTime())\r\n        };\r\n        setComments([...comments, answerFromServer]);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setIsLoadingComment(false));\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header/>\r\n      <main className=\"content\">\r\n        {isLoading ? <Preloader/> :\r\n          <PhotoGrid\r\n            cards={cards}\r\n            isLoading={isLoading}\r\n            onImageClick={handleGetOriginalSizeImage}\r\n          />\r\n        }\r\n      </main>\r\n      <Footer/>\r\n      <Popup\r\n        isOpenPopup={isOpenPopup}\r\n        onClose={closePopup}\r\n        isLoadingComment={isLoadingComment}\r\n        onSubmitComment={handleSubmitComment}\r\n        comments={comments}\r\n        currentOriginSizeImage={currentOriginSizeImage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}